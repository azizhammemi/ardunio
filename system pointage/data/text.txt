#include <LiquidCrystal_I2C.h> 
#include <Keypad.h>
#include <Servo.h>
Servo myservo;
const int ROW_NUM = 4; //four rows
const int COLUMN_NUM = 4; //four columns
LiquidCrystal_I2C lcd(0x27, 20, 4);
char keys[ROW_NUM][COLUMN_NUM] = {
{'1','2','3', 'A'},
{'4','5','6', 'B'},
{'7','8','9', 'C'},
{'*','0','#', 'D'}
};
String code="";
byte pin_rows[ROW_NUM] = {0, 8, 7, 6}; //connect to the row pinouts of the keypad
byte pin_column[COLUMN_NUM] = {5, 4, 3, 2}; //connect to the column pinouts of the keypad
Keypad keypad = Keypad( makeKeymap(keys), pin_rows, pin_column, ROW_NUM, COLUMN_NUM );
//
int heure = 00;
int minutee = 00;
int seconde = 00;
//
int pos = 0;
int a=0;
void setup(){
  myservo.attach(1);
 lcd.init(); // initialisation de l’afficheur
 lcd.clear();
 lcd.backlight(); // active le rétro-éclairage
 lcd.setCursor(0, 0); // se positionner à la première ligne

 

}

void loop(){
char key = keypad.getKey();
if(key) // On appuie sur une touche du clavier matriciel
{
lcd.print(key);  // Afficher le carctere saisie sur l'afficheur LCD
code+=key;
delay(100);
}
if ((code.length()==4)){

  if (code=="2222") { 
lcd.clear();
     lcd.setCursor(0, 0); // se positionner à la première ligne
  lcd.print("welcome fiki");
openn();
  delay(2000);
closee();
  //stop le moteur
  lcd.clear();
  code="";
  }
   if (code=="1111"){
    a=a+1;
    if(a==1){
    lcd.clear();
     lcd.setCursor(0, 0); // se positionner à la première ligne
  lcd.print("welcome aziz");
      //le moteur tourne pour ouvrir la porte
openn();
 
  delay(2000);
   lcd.clear();
closee();
}
 if(a==2){
      lcd.clear();
        lcd.setCursor(0, 0); // se positionner à la première ligne
  lcd.print("by aziz");
  delay(2000);
  lcd.clear();
 
  a=0;
    }
  //stop le moteur
  lcd.clear();
  code="";
  }
  

  else {
         lcd.print("code non valide");
         delay(2000);
         lcd.clear();
         code="";
  } 
}
}
void closee(){
 for (pos = 0; pos <= 180; pos += 5) { // goes from 180 degrees to 0 degrees
    myservo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(15);                       // waits 15ms for the servo to reach the position
  }
}
void openn(){
    for (pos = 180; pos >= 0; pos -= 5) { // goes from 0 degrees to 180 degrees
    // in steps of 1 degree
    myservo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(15);                       // waits 15ms for the servo to reach the position
  }
}